<?php

namespace HackTheHub\Leaves\Event;

use HackTheHub\Models\Event\Event;
use Rhubarb\Leaf\Controls\Common\Buttons\Button;
use Rhubarb\Leaf\Controls\Common\SelectionControls\DropDown\DropDown;
use Rhubarb\Leaf\Views\View;
use Rhubarb\Stem\Filters\Equals;

class EventCollectionView extends View
{
    public function createSubLeaves()
    {
        $costSort = new DropDown("cost-drop-down");
        $costSort->setSelectionItems(["choose a price range", "£0-5", "£5-10", "£10-15", "£15-20", "£20-30", "£30-50", "£50+"]);
        $submit = new Button("submit","filter results", null);
        $this->registerSubLeaf($costSort);
        $this->registerSubLeaf($submit);
        parent::createSubLeaves(); // TODO: Change the autogenerated stub
    }
    
    protected function printViewContent()
    {
        print "<style>@import 'https://fonts.googleapis.com/css?family=Roboto:300,400,500';

body{
    margin: 0px;
    padding:0px;
    font-family: Roboto;
    font-weight: 400;
    color: white;
    font-size: 18px;
    background-color: #3498db;
}
</style>";

        print "<center>";
        print "<a href='add/'>Want to add your own event? click here!</a><br><br>";
        print $this->leaves["cost-drop-down"];
        print $this->leaves["submit"];
        $events = Event::find(new Equals("",null))->addSort("DateTimeStart");
        foreach ($events as $event){
            print $event->Name . "<br>";
            print $event->DateTimeStart . "<br>";
            print "£".$event->Cost . "<br>";
            print "<a href='$event->TicketLink'>Get tickets or sign up</a>" . "<br><br>";
        }
        print "</center>";
    }
}